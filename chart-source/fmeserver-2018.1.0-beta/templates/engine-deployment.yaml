apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    safe.k8s.fmeserver.component: engine
    {{- include "fmeserver.common.labels" . | indent 4 }}
  name: engine
spec:
  replicas: 2
  selector:
    matchLabels:
      safe.k8s.fmeserver.component: engine
  template:
    metadata:
      labels:
        safe.k8s.fmeserver.component: engine
        {{- include "fmeserver.common.labels" . | indent 8 }}
    spec:
      containers:
        - image: {{ .Values.images.registry }}/{{ .Values.images.namespace }}/fmeserver-engine:{{ .Values.fmeserver.buildNr }}
          name: engine
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          volumeMounts:
            - mountPath: /data/fmeserverdata
              name: fmeserverdata
          env:
            - name: EXTERNALHOSTNAME
              value: {{ .Values.deployment.hostname }}
            - name: WEBPROTOCOL
              value: https
            - name: EXTERNALPORT
              value: '443'
            - name: FMESERVERHOSTNAME
              value: engineregistration
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PGSQLHOSTNAME
              value: "{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
          resources:
{{ toYaml .Values.resources.engine | indent 12 }}
      restartPolicy: Always
      volumes:
        - name: fmeserverdata
          persistentVolumeClaim:
            claimName: fmeserver-data
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: safe.k8s.fmeserver.component
                operator: In
                values:
                - core
            topologyKey: "kubernetes.io/hostname"