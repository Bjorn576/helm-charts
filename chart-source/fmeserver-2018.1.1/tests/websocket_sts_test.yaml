suite: websocket statefulset
templates:
  - websocket-statefulset.yaml
tests:
  - it: renders default values
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "quay.io/safesoftware/fmeserver-core:2018.1.1"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: fmeserver-data

  - it: ensures affinity to core if volume does not support many access
    asserts:
      - contains:
          path: spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution
          content:
            labelSelector:
              matchExpressions:
              - key: safe.k8s.fmeserver.component
                operator: In
                values:
                - core
            topologyKey: "kubernetes.io/hostname"

  - it: ignores affinity to core if volume supports ReadWriteMany access
    set:
      storage.fmeserver.accessMode: ReadWriteMany
    asserts:
      - isEmpty:
          path: spec.template.spec.affinity

  - it: renders labels
    asserts:
      - equal:
          path: metadata.labels.safe\.k8s\.fmeserver\.component
          value: websocket
      - equal:
          path: metadata.labels.safe\.k8s\.fmeserver\.build
          value: '2018.1.1'

  - it: allows to change the pull policy, registry and namespace
    set:
      fmeserver.buildNr: '2018.1.1-20181120'
      images.pullPolicy: Always
      images.registry: safe-harbour.safe.internal
      images.namespace: fmeserver-k8s
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always
      - equal:
          path: spec.template.spec.containers[0].image
          value: "safe-harbour.safe.internal/fmeserver-k8s/fmeserver-core:2018.1.1-20181120"
